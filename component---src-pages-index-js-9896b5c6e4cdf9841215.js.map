{"version":3,"sources":["webpack://gatsby-starter-blog/./src/styles/post.module.css","webpack://gatsby-starter-blog/./src/components/row-posts.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["post__link","posts","map","post","index","columnContainerStyle","className","key","fields","slug","Link","to","fluid","frontmatter","hero","childImageSharp","imgStyle","elevation","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","date","PostStyles","excerpt","data","location","siteTitle","site","siteMetadata","title","allMarkdownRemark","nodes","node","Math","floor","push","image","fileName","publicURL","path","pathname","type"],"mappings":"8MAGWA,EAAa,iC,oBCiDxB,EA9CiB,SAAC,GAAD,SAAGC,MACZC,KAAI,SAAEC,EAAMC,GAChB,IAAIC,EAOJ,OALEA,EADY,IAAVD,EDH0B,2CACA,2CCS1B,uBAAKE,UAAWD,GACd,2BAASE,IAAKJ,EAAKK,OAAOC,MACxB,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKK,OAAOC,MACpB,gBAAC,IAAD,CACEG,MAAOT,EAAKU,YAAYC,KAAKC,gBAAgBH,MAC7CI,SAAU,CACRC,UAAU,EACVC,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,YAAa,OACbC,cAAe,GACfC,aAAc,OAIpB,uBAAKjB,UDzBY,uCC0Bf,6BAAQH,EAAKU,YAAYW,MACzB,+BACE,gBAAC,EAAAd,KAAD,CAAMC,GAAIR,EAAKK,OAAOC,KAAMH,UAAWmB,GACrC,yBAAItB,EAAKuB,UAEX,uBAAKpB,UDhCY,2CCiCf,gBAAC,EAAAI,KAAD,CACEC,GAAIR,EAAKK,OAAOC,KAChBH,UAAWmB,GAFb,kBCLlB,EAzBkB,SAAC,GAAwB,IAAD,EAArBE,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAS,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,MACtC/B,EAAQ,GAOZ,OALA0B,EAAKM,kBAAkBC,MAAMhC,KAAI,SAAEiC,EAAM/B,GAEvC,OADIA,EAAM,GAAM,IAAGH,EAAMmC,KAAKC,MAAMjC,EAAM,IAAI,IACvCH,EAAMmC,KAAKC,MAAMjC,EAAM,IAAIkC,KAAKH,MAIvC,2BACE,gBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAOH,EAAWU,MAAOZ,EAAKa,SAASC,UAAWC,KAAMd,EAASe,SAAUC,KAAK,YACpF3C,EAAMC,KAAI,SAAEgC,GACX,OACE,uBAAK5B,UFrBa,wCEsBhB,gBAAC,EAAD,CAAUL,MAAOiC","file":"component---src-pages-index-js-9896b5c6e4cdf9841215.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var posts__container = \"post-module--posts__container--1Ndsd\";\nexport var title__content = \"post-module--title__content--2Wa1K\";\nexport var post__link = \"post-module--post__link--2n1_o\";\nexport var more__text__content = \"post-module--more__text__content--h64Rg\";\nexport var text__container = \"post-module--text__container--gc0BY\";\nexport var column__l__container = \"post-module--column__l__container--3JKWW\";\nexport var column__r__container = \"post-module--column__r__container--3X7kh\";","import React from 'react'\nimport * as PostStyles from '../styles/post.module.css'\nimport Image from \"gatsby-image\";\nimport { Link } from \"gatsby\"\n\n// 画像ファイルパスをプロパティに取るようなコンポーネントを定義\nconst rowPosts = ({ posts }) => (\n  posts.map(( post, index ) => {\n    let columnContainerStyle;\n    if (index === 0) {\n      columnContainerStyle = PostStyles.column__l__container\n    } else {\n      columnContainerStyle = PostStyles.column__r__container\n    }\n\n    return (\n        <div className={columnContainerStyle}>\n          <article key={post.fields.slug}>\n            <Link to={post.fields.slug}>\n              <Image\n                fluid={post.frontmatter.hero.childImageSharp.fluid}\n                imgStyle={{\n                  elevation:4,\n                  shadowOffset: { width: 5, height: 5 },\n                  shadowColor: \"grey\",\n                  shadowOpacity: 0.5,\n                  shadowRadius: 10,\n                }}\n              />\n            </Link>\n            <div className={PostStyles.text__container}>\n              <small>{post.frontmatter.date}</small>\n              <section>\n                <Link to={post.fields.slug} className={PostStyles.post__link}>\n                  <p>{post.excerpt}</p>\n                </Link>\n                <div className={PostStyles.more__text__content}>\n                  <Link \n                    to={post.fields.slug}\n                    className={PostStyles.post__link}\n                  >\n                    続きを読む\n                  </Link>\n                </div>\n              </section>\n            </div>\n          </article>\n        </div>\n    );\n  })\n)\n\nexport default rowPosts\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport * as PostStyles from '../styles/post.module.css'\nimport RowPosts from \"../components/row-posts\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title\n  var posts = []\n\n  data.allMarkdownRemark.nodes.map(( node, index ) => {\n    if (index%2 === 0){posts[Math.floor(index/2)]=[]}\n    return posts[Math.floor(index/2)].push(node)\n  })\n\n  return (\n    <div>\n      <Layout location={location} title={siteTitle}>\n        <Seo title={siteTitle} image={data.fileName.publicURL} path={location.pathname} type='website' />\n        {posts.map(( nodes ) => {\n          return (\n            <div className={PostStyles.posts__container}>\n              <RowPosts posts={nodes}/>\n            </div>\n          )\n        })}\n      </Layout>\n    </div>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          hero {\n            childImageSharp {\n              fluid(maxWidth: 1280) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    fileName: file(relativePath: {eq: \"header-sota-noho-v2.png\"}) {\n      publicURL\n    }\n  }\n`\n"],"sourceRoot":""}