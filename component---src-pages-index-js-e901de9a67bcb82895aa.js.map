{"version":3,"sources":["webpack:///./src/styles/post.module.css","webpack:///./src/components/row-posts.js","webpack:///./src/pages/index.js"],"names":["module","exports","posts","map","post","index","columnContainerStyle","PostStyles","column__l__container","column__r__container","className","key","fields","slug","to","fluid","frontmatter","hero","childImageSharp","imgStyle","elevation","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","text__container","date","title__content","title","dangerouslySetInnerHTML","__html","description","excerpt","more__text__content","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","node","Math","floor","push","image","fileName","publicURL","path","pathname","type","posts__container"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,iBAAmB,uCAAuC,eAAiB,qCAAqC,oBAAsB,0CAA0C,gBAAkB,sCAAsC,qBAAuB,2CAA2C,qBAAuB,6C,0LCKpU,uBAAGC,MACVC,KAAI,SAAEC,EAAMC,GAChB,IAAIC,EAOJ,OALEA,EADY,IAAVD,EACqBE,IAAWC,qBAEXD,IAAWE,qBAIhC,yBAAKC,UAAWJ,GACd,6BAASK,IAAKP,EAAKQ,OAAOC,MACxB,kBAAC,OAAD,CAAMC,GAAIV,EAAKQ,OAAOC,MACpB,kBAAC,IAAD,CACEE,MAAOX,EAAKY,YAAYC,KAAKC,gBAAgBH,MAC7CI,SAAU,CACRC,UAAU,EACVC,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,YAAa,OACbC,cAAe,GACfC,aAAc,OAIpB,yBAAKhB,UAAWH,IAAWoB,iBACzB,+BAAQvB,EAAKY,YAAYY,MACzB,gCACE,wBAAIlB,UAAWH,IAAWsB,gBACxB,kBAAC,OAAD,CACEf,GAAIV,EAAKQ,OAAOC,MAEfT,EAAKY,YAAYc,SAIxB,iCACE,uBACEC,wBAAyB,CACvBC,OAAQ5B,EAAKY,YAAYiB,aAAe7B,EAAK8B,WAGjD,yBAAKxB,UAAWH,IAAW4B,qBACzB,kBAAC,OAAD,CAAMrB,GAAIV,EAAKQ,OAAOC,MAAtB,kBCbLuB,GAFEC,UAzBG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAS,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBZ,MACtC5B,EAAQ,GAOZ,OALAoC,EAAKK,kBAAkBC,MAAMzC,KAAI,SAAE0C,EAAMxC,GAEvC,OADIA,EAAM,GAAM,IAAGH,EAAM4C,KAAKC,MAAM1C,EAAM,IAAI,IACvCH,EAAM4C,KAAKC,MAAM1C,EAAM,IAAI2C,KAAKH,MAIvC,6BACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUT,MAAOU,GACjC,kBAAC,IAAD,CAAKV,MAAOU,EAAWS,MAAOX,EAAKY,SAASC,UAAWC,KAAMb,EAASc,SAAUC,KAAK,YACpFpD,EAAMC,KAAI,SAAEyC,GACX,OACE,yBAAKlC,UAAWH,IAAWgD,kBACzB,kBAAC,EAAD,CAAUrD,MAAO0C,WAWT","file":"component---src-pages-index-js-e901de9a67bcb82895aa.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__container\":\"post-module--posts__container--1KzWy\",\"title__content\":\"post-module--title__content--2Xaa4\",\"more__text__content\":\"post-module--more__text__content--38fmX\",\"text__container\":\"post-module--text__container--3xlSw\",\"column__l__container\":\"post-module--column__l__container--1wusw\",\"column__r__container\":\"post-module--column__r__container--y_GWD\"};","import React from 'react'\nimport PostStyles from '../styles/post.module.css'\nimport Image from \"gatsby-image\";\nimport { Link } from \"gatsby\"\n\n// 画像ファイルパスをプロパティに取るようなコンポーネントを定義\nexport default ({ posts }) => (\n  posts.map(( post, index ) => {\n    let columnContainerStyle;\n    if (index === 0) {\n      columnContainerStyle = PostStyles.column__l__container\n    } else {\n      columnContainerStyle = PostStyles.column__r__container\n    }\n\n    return (\n        <div className={columnContainerStyle}>\n          <article key={post.fields.slug}>\n            <Link to={post.fields.slug}>\n              <Image\n                fluid={post.frontmatter.hero.childImageSharp.fluid}\n                imgStyle={{\n                  elevation:4,\n                  shadowOffset: { width: 5, height: 5 },\n                  shadowColor: \"grey\",\n                  shadowOpacity: 0.5,\n                  shadowRadius: 10,\n                }}\n              />\n            </Link>\n            <div className={PostStyles.text__container}>\n              <small>{post.frontmatter.date}</small>\n              <header>\n                <h3 className={PostStyles.title__content}>\n                  <Link\n                    to={post.fields.slug}\n                  >\n                    {post.frontmatter.title}\n                  </Link>\n                </h3>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.frontmatter.description || post.excerpt,\n                  }}\n                />\n                <div className={PostStyles.more__text__content}>\n                  <Link to={post.fields.slug}>\n                    続きを読む\n                  </Link>\n                </div>\n              </section>\n            </div>\n          </article>\n        </div>\n    );\n  })\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostStyles from '../styles/post.module.css'\nimport RowPosts from \"../components/row-posts\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title\n  var posts = []\n\n  data.allMarkdownRemark.nodes.map(( node, index ) => {\n    if (index%2 === 0){posts[Math.floor(index/2)]=[]}\n    return posts[Math.floor(index/2)].push(node)\n  })\n\n  return (\n    <div>\n      <Layout location={location} title={siteTitle}>\n        <SEO title={siteTitle} image={data.fileName.publicURL} path={location.pathname} type='website' />\n        {posts.map(( nodes ) => {\n          return (\n            <div className={PostStyles.posts__container}>\n              <RowPosts posts={nodes}/>\n            </div>\n          )\n        })}\n      </Layout>\n    </div>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          hero {\n            childImageSharp {\n              fluid(maxWidth: 1280) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    fileName: file(relativePath: {eq: \"header-sota-noho-v2.png\"}) {\n      publicURL\n    }\n  }\n`\n"],"sourceRoot":""}